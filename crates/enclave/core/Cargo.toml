[package]
name = "quartz-enclave-core"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
categories = ["cryptography::cryptocurrencies", "hardware-support", "wasm"]
keywords = ["cosmos", "cosmwasm", "cycles", "quartz", "sgx"]
readme = "README.md"
description = """
A Rust framework for building Intel SGX enclaves managed by a CosmWasm contract.
"""

[features]
mock-sgx = ["quartz-contract-core/mock-sgx"]

[dependencies]
# external
anyhow.workspace = true
async-trait.workspace = true
displaydoc.workspace = true
futures-util.workspace = true
hex.workspace = true
k256 = { workspace = true, features = ["pem", "serde"] }
log.workspace = true
rand.workspace = true
reqwest = { workspace = true, features = ["blocking"] }
serde.workspace = true
serde_json.workspace = true
serde_with.workspace = true
tonic.workspace = true
tonic-health.workspace = true
tokio.workspace = true
urlencoding.workspace = true

# mobilecoin
mc-sgx-dcap-sys-types.workspace = true

# cosmos
cosmrs.workspace = true
tendermint.workspace = true
tendermint-light-client.workspace = true
tendermint-rpc = { workspace = true, features = ["websocket-client", "http-client"] }

# quartz
cw-client.workspace = true
quartz-cw-proof.workspace = true
quartz-contract-core.workspace = true
quartz-proto.workspace = true
quartz-tm-prover.workspace = true
quartz-tee-ra.workspace = true
quartz-tm-stateless-verifier.workspace = true
